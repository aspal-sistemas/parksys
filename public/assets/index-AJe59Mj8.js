import{a5 as r,bZ as ne,am as re,e as ie,a6 as oe,Y as L,a7 as ce,u as A,j as e,aI as G,c8 as te,aJ as de,c9 as ue,ca as he,B as m,A as Q,aa as xe,aO as me,aP as je,aQ as F,aR as T,C as R,a as U,b as z,a3 as O,c as V,ab as i,ac as o,ad as c,z as f,ae as t,H as C,J as y,K as N,cA as H,N as E,aA as d,af as u,M as J,I as j,O as M,bH as $,ag as S,ah as ge,ai as pe}from"./index-VG22aPDC.js";import{H as ve}from"./Helmet-CoO02W0T.js";import{D as X}from"./date-picker-D7EUr6br.js";import{S as be}from"./separator-D_IPDq0v.js";import{S as g}from"./skeleton-BEdbCltD.js";import{T as fe}from"./tree-deciduous-BRCkX328.js";import{R as Ce}from"./ruler-DRjU-njx.js";const ye=r.object({speciesId:r.string().min(1,{message:"Debe seleccionar una especie"}),parkId:r.string().min(1,{message:"Debe seleccionar un parque"}),latitude:r.string().min(1,{message:"La latitud es obligatoria"}),longitude:r.string().min(1,{message:"La longitud es obligatoria"}),plantingDate:r.date().nullable(),developmentStage:r.string().nullable(),ageEstimate:r.coerce.number().int().nullable(),height:r.coerce.number().positive().nullable(),diameter:r.coerce.number().positive().nullable(),canopyCoverage:r.coerce.number().positive().nullable(),healthStatus:r.string(),physicalCondition:r.string().nullable(),hasHollows:r.boolean().default(!1),hasExposedRoots:r.boolean().default(!1),hasPests:r.boolean().default(!1),observations:r.string().nullable(),lastInspectionDate:r.date().nullable(),isProtected:r.boolean().default(!1),locationDescription:r.string().nullable(),imageUrl:r.string().nullable()});function Le(){const[Ne,D]=ne("/admin/trees/inventory/:id/edit"),[,p]=re(),{toast:v}=ie(),B=oe(),[Y,b]=L.useState("location"),[K,w]=L.useState(!1),x=D==null?void 0:D.id,n=ce({resolver:ge(ye),defaultValues:{speciesId:"",parkId:"",latitude:"",longitude:"",plantingDate:null,developmentStage:"",ageEstimate:null,height:null,diameter:null,canopyCoverage:null,healthStatus:"Bueno",physicalCondition:"",hasHollows:!1,hasExposedRoots:!1,hasPests:!1,observations:"",lastInspectionDate:null,isProtected:!1,locationDescription:"",imageUrl:""}}),{data:I,isLoading:k,error:Z}=A({queryKey:[`/api/trees/${x}`],queryFn:async()=>{const a=await fetch(`/api/trees/${x}`);if(!a.ok)throw new Error("Error al cargar la información del árbol");return a.json()},enabled:!!x}),l=I==null?void 0:I.data,{data:P,isLoading:W}=A({queryKey:["/api/tree-species"],queryFn:async()=>{const a=await fetch("/api/tree-species");if(!a.ok)throw new Error("Error al cargar las especies arbóreas");return a.json()}}),{data:q,isLoading:_}=A({queryKey:["/api/parks"],queryFn:async()=>{const a=await fetch("/api/parks");if(!a.ok)throw new Error("Error al cargar los parques");return a.json()}});L.useEffect(()=>{var a,s;if(l){console.log("Datos del árbol recibidos de la API:",l);const h=l.plantingDate?new Date(l.plantingDate):null;n.reset({speciesId:((a=l.speciesId)==null?void 0:a.toString())||"",parkId:((s=l.parkId)==null?void 0:s.toString())||"",latitude:l.latitude||"",longitude:l.longitude||"",plantingDate:h,developmentStage:l.developmentStage||"",ageEstimate:l.ageEstimate?Number(l.ageEstimate):null,height:l.height?Number(l.height):null,diameter:l.diameter?Number(l.diameter):null,canopyCoverage:l.canopyCoverage?Number(l.canopyCoverage):null,healthStatus:l.healthStatus||"Bueno",physicalCondition:l.condition||"",hasHollows:l.hasHollows||!1,hasExposedRoots:l.hasExposedRoots||!1,hasPests:l.hasPests||!1,observations:l.notes||"",lastInspectionDate:null,isProtected:l.isProtected||!1,locationDescription:l.locationDescription||"",imageUrl:l.imageUrl||""})}},[l,n]);const ee=async a=>{console.log("🌳 onSubmit LLAMADO - Iniciando proceso de guardado"),console.log("🌳 Estado del formulario:",n.formState),console.log("🌳 Errores del formulario:",n.formState.errors);try{console.log("🌳 Datos del formulario antes de formatear:",a);const s={...a,speciesId:parseInt(a.speciesId),parkId:parseInt(a.parkId)};console.log("🌳 Datos formateados que se enviarán:",s),console.log("🌳 Realizando petición PUT a:",`/api/trees/${x}`),await pe(`/api/trees/${x}`,{method:"PUT",data:s}),v({title:"Árbol actualizado",description:"Los cambios han sido guardados correctamente.",variant:"success"}),B.invalidateQueries({queryKey:[`/api/trees/${x}`]}),B.invalidateQueries({queryKey:["/api/trees"]}),p(`/admin/trees/inventory/${x}`)}catch(s){console.error("Error al actualizar el árbol:",s),v({title:"Error",description:"No se pudieron guardar los cambios. Por favor, intenta nuevamente.",variant:"destructive"})}},ae=()=>{navigator.geolocation?(w(!0),navigator.geolocation.getCurrentPosition(a=>{n.setValue("latitude",a.coords.latitude.toString()),n.setValue("longitude",a.coords.longitude.toString()),w(!1),v({title:"Ubicación obtenida",description:"Las coordenadas de tu ubicación actual han sido capturadas.",variant:"success"})},a=>{console.error("Error al obtener la ubicación:",a),w(!1),v({title:"Error de geolocalización",description:"No se pudo obtener tu ubicación actual. Por favor, ingresa las coordenadas manualmente.",variant:"destructive"})})):v({title:"Geolocalización no soportada",description:"Tu navegador no soporta la geolocalización. Por favor, ingresa las coordenadas manualmente.",variant:"destructive"})},se=[{value:"Juvenil",label:"Juvenil"},{value:"Maduro",label:"Maduro"},{value:"Senescente",label:"Senescente"}],le=[{value:"Bueno",label:"Bueno"},{value:"Regular",label:"Regular"},{value:"Malo",label:"Malo"},{value:"Crítico",label:"Crítico"}];return Z?e.jsx(G,{children:e.jsxs("div",{className:"container mx-auto px-4 py-6",children:[e.jsxs(te,{variant:"destructive",className:"mb-4",children:[e.jsx(de,{className:"h-4 w-4"}),e.jsx(ue,{children:"Error"}),e.jsx(he,{children:"No se pudo cargar la información del árbol. Verifica que el ID sea correcto."})]}),e.jsxs(m,{onClick:()=>p("/admin/trees/inventory"),variant:"outline",className:"mt-4",children:[e.jsx(Q,{className:"mr-2 h-4 w-4"})," Volver al Inventario"]})]})}):e.jsxs(G,{children:[e.jsxs(ve,{children:[e.jsx("title",{children:k?"Cargando...":`Editar Árbol ${l.code} | Inventario Arbóreo | ParquesMX`}),e.jsx("meta",{name:"description",content:"Editar información del árbol en el inventario de parques municipales"})]}),e.jsxs("div",{className:"container mx-auto px-4 py-6",children:[e.jsxs("div",{className:"flex items-center mb-6",children:[e.jsx(m,{variant:"ghost",size:"icon",onClick:()=>p(`/admin/trees/inventory/${x}`),className:"mr-2",children:e.jsx(Q,{className:"h-5 w-5"})}),e.jsxs("div",{children:[k?e.jsx(g,{className:"h-8 w-64"}):e.jsxs("h1",{className:"text-3xl font-bold text-green-800 flex items-center",children:[e.jsx(fe,{className:"mr-2 h-8 w-8"}),"Editar Árbol: ",l.code]}),e.jsx("p",{className:"text-gray-600 mt-1",children:"Actualiza la información del árbol en el inventario"})]})]}),k?e.jsxs("div",{className:"space-y-6",children:[e.jsx(g,{className:"h-[300px] w-full rounded-lg"}),e.jsxs("div",{className:"flex gap-4",children:[e.jsx(g,{className:"h-12 w-full rounded-md"}),e.jsx(g,{className:"h-12 w-full rounded-md"}),e.jsx(g,{className:"h-12 w-full rounded-md"})]}),e.jsx(g,{className:"h-[400px] w-full rounded-lg"})]}):e.jsx(xe,{...n,children:e.jsx("form",{onSubmit:n.handleSubmit(ee),className:"space-y-6",children:e.jsxs(me,{defaultValue:"location",value:Y,onValueChange:b,children:[e.jsxs(je,{className:"grid grid-cols-3 mb-4",children:[e.jsx(F,{value:"location",children:"Ubicación"}),e.jsx(F,{value:"characteristics",children:"Características"}),e.jsx(F,{value:"health",children:"Estado y Observaciones"})]}),e.jsx(T,{value:"location",children:e.jsxs(R,{children:[e.jsxs(U,{children:[e.jsx(z,{children:"Datos de Ubicación"}),e.jsx(O,{children:"Información sobre la ubicación del árbol en el parque"})]}),e.jsxs(V,{className:"space-y-4",children:[e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:e.jsx(i,{control:n.control,name:"parkId",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Parque*"}),e.jsxs(f,{onValueChange:a.onChange,value:a.value,children:[e.jsx(t,{children:e.jsx(C,{children:e.jsx(y,{placeholder:"Selecciona un parque"})})}),e.jsx(N,{children:_?e.jsx("div",{className:"flex items-center justify-center p-4",children:e.jsx(H,{className:"h-6 w-6 animate-spin text-gray-500"})}):q==null?void 0:q.map(s=>e.jsx(E,{value:s.id.toString(),children:s.name},s.id))})]}),e.jsx(d,{children:"Parque donde se encuentra el árbol"}),e.jsx(u,{})]})})}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsx(i,{control:n.control,name:"speciesId",render:({field:a})=>{var s;return e.jsxs(o,{children:[e.jsx(c,{children:"Especie*"}),e.jsxs(f,{onValueChange:a.onChange,value:a.value,children:[e.jsx(t,{children:e.jsx(C,{children:e.jsx(y,{placeholder:"Selecciona una especie"})})}),e.jsx(N,{children:W?e.jsx("div",{className:"flex items-center justify-center p-4",children:e.jsx(H,{className:"h-6 w-6 animate-spin text-gray-500"})}):(s=P==null?void 0:P.data)==null?void 0:s.map(h=>e.jsxs(E,{value:h.id.toString(),children:[h.commonName," (",h.scientificName,")"]},h.id))})]}),e.jsx(d,{children:"Especie a la que pertenece el árbol"}),e.jsx(u,{})]})}}),e.jsx(i,{control:n.control,name:"plantingDate",render:({field:a})=>e.jsxs(o,{className:"flex flex-col",children:[e.jsx(c,{children:"Fecha de Plantación"}),e.jsx(t,{children:e.jsx(X,{selected:a.value,onSelect:a.onChange,placeholder:"Selecciona una fecha"})}),e.jsx(d,{children:"Fecha en que se plantó el árbol (si se conoce)"}),e.jsx(u,{})]})})]}),e.jsxs("div",{className:"grid grid-cols-1 gap-4",children:[e.jsxs("div",{className:"bg-gray-50 p-4 rounded-lg border border-gray-200",children:[e.jsxs("div",{className:"flex justify-between items-center mb-4",children:[e.jsxs("div",{children:[e.jsxs("h3",{className:"text-lg font-medium flex items-center",children:[e.jsx(J,{className:"h-5 w-5 mr-2 text-green-600"}),"Geolocalización"]}),e.jsx("p",{className:"text-sm text-gray-500",children:"Coordenadas exactas donde se encuentra el árbol"})]}),e.jsx(m,{type:"button",variant:"outline",onClick:ae,disabled:K,children:K?e.jsxs(e.Fragment,{children:[e.jsx(H,{className:"h-4 w-4 mr-2 animate-spin"}),"Obteniendo..."]}):e.jsxs(e.Fragment,{children:[e.jsx(J,{className:"h-4 w-4 mr-2"}),"Usar mi ubicación"]})})]}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsx(i,{control:n.control,name:"latitude",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Latitud*"}),e.jsx(t,{children:e.jsx(j,{placeholder:"Ej: 20.6736",...a})}),e.jsx(u,{})]})}),e.jsx(i,{control:n.control,name:"longitude",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Longitud*"}),e.jsx(t,{children:e.jsx(j,{placeholder:"Ej: -103.3456",...a})}),e.jsx(u,{})]})})]})]}),e.jsx(i,{control:n.control,name:"locationDescription",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Descripción de la Ubicación"}),e.jsx(t,{children:e.jsx(M,{placeholder:"Describe la ubicación del árbol dentro del parque...",...a,value:a.value||""})}),e.jsx(d,{children:'Descripción que ayude a ubicar el árbol (ej: "Cerca de la entrada principal")'}),e.jsx(u,{})]})})]})]}),e.jsxs($,{className:"flex justify-between",children:[e.jsx(m,{variant:"outline",onClick:()=>p(`/admin/trees/inventory/${x}`),children:"Cancelar"}),e.jsx(m,{type:"button",onClick:()=>b("characteristics"),children:"Siguiente"})]})]})}),e.jsx(T,{value:"characteristics",children:e.jsxs(R,{children:[e.jsxs(U,{children:[e.jsx(z,{children:"Características Físicas"}),e.jsx(O,{children:"Información sobre las características físicas y dimensiones del árbol"})]}),e.jsxs(V,{className:"space-y-6",children:[e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4",children:[e.jsx(i,{control:n.control,name:"developmentStage",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Etapa de Desarrollo"}),e.jsxs(f,{onValueChange:a.onChange,value:a.value||"",children:[e.jsx(t,{children:e.jsx(C,{children:e.jsx(y,{placeholder:"Selecciona una etapa"})})}),e.jsx(N,{children:se.map(s=>e.jsx(E,{value:s.value,children:s.label},s.value))})]}),e.jsx(d,{children:"Etapa actual de desarrollo del árbol"}),e.jsx(u,{})]})}),e.jsx(i,{control:n.control,name:"ageEstimate",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Edad Estimada (años)"}),e.jsx(t,{children:e.jsx(j,{type:"number",min:"0",placeholder:"Ej: 15",...a,value:a.value===null?"":a.value,onChange:s=>{const h=s.target.value===""?null:parseInt(s.target.value);a.onChange(h)}})}),e.jsx(d,{children:"Edad aproximada del árbol en años"}),e.jsx(u,{})]})}),e.jsx(i,{control:n.control,name:"imageUrl",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"URL de Imagen"}),e.jsx(t,{children:e.jsx(j,{placeholder:"https://ejemplo.com/imagen.jpg",...a,value:a.value||""})}),e.jsx(d,{children:"URL de una fotografía del árbol"}),e.jsx(u,{})]})})]}),e.jsxs("div",{className:"bg-gray-50 p-4 rounded-lg border border-gray-200",children:[e.jsxs("h3",{className:"text-lg font-medium flex items-center mb-4",children:[e.jsx(Ce,{className:"h-5 w-5 mr-2 text-green-600"}),"Dimensiones"]}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4",children:[e.jsx(i,{control:n.control,name:"height",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Altura (metros)"}),e.jsx(t,{children:e.jsx(j,{type:"number",step:"0.1",min:"0",placeholder:"Ej: 12.5",...a,value:a.value===null?"":a.value,onChange:s=>{const h=s.target.value===""?null:parseFloat(s.target.value);a.onChange(h)}})}),e.jsx(d,{children:"Altura aproximada en metros"}),e.jsx(u,{})]})}),e.jsx(i,{control:n.control,name:"diameter",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Diámetro del Tronco (cm)"}),e.jsx(t,{children:e.jsx(j,{type:"number",step:"0.1",min:"0",placeholder:"Ej: 45.2",...a,value:a.value===null?"":a.value,onChange:s=>{const h=s.target.value===""?null:parseFloat(s.target.value);a.onChange(h)}})}),e.jsx(d,{children:"Diámetro a la altura del pecho (DAP)"}),e.jsx(u,{})]})}),e.jsx(i,{control:n.control,name:"canopyCoverage",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Cobertura de Copa (m²)"}),e.jsx(t,{children:e.jsx(j,{type:"number",step:"0.1",min:"0",placeholder:"Ej: 28.3",...a,value:a.value===null?"":a.value,onChange:s=>{const h=s.target.value===""?null:parseFloat(s.target.value);a.onChange(h)}})}),e.jsx(d,{children:"Área que cubre la copa en metros cuadrados"}),e.jsx(u,{})]})})]})]})]}),e.jsxs($,{className:"flex justify-between",children:[e.jsx(m,{type:"button",variant:"outline",onClick:()=>b("location"),children:"Anterior"}),e.jsx(m,{type:"button",onClick:()=>b("health"),children:"Siguiente"})]})]})}),e.jsx(T,{value:"health",children:e.jsxs(R,{children:[e.jsxs(U,{children:[e.jsx(z,{children:"Estado y Observaciones"}),e.jsx(O,{children:"Información sobre el estado de salud del árbol y observaciones adicionales"})]}),e.jsxs(V,{className:"space-y-6",children:[e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsx(i,{control:n.control,name:"healthStatus",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Estado de Salud"}),e.jsxs(f,{onValueChange:a.onChange,value:a.value,children:[e.jsx(t,{children:e.jsx(C,{children:e.jsx(y,{placeholder:"Selecciona un estado"})})}),e.jsx(N,{children:le.map(s=>e.jsx(E,{value:s.value,children:s.label},s.value))})]}),e.jsx(d,{children:"Evaluación general del estado del árbol"}),e.jsx(u,{})]})}),e.jsx(i,{control:n.control,name:"lastInspectionDate",render:({field:a})=>e.jsxs(o,{className:"flex flex-col",children:[e.jsx(c,{children:"Fecha de Última Inspección"}),e.jsx(t,{children:e.jsx(X,{selected:a.value,onSelect:a.onChange,placeholder:"Selecciona una fecha"})}),e.jsx(d,{children:"Fecha de la última inspección realizada"}),e.jsx(u,{})]})})]}),e.jsx(i,{control:n.control,name:"physicalCondition",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Condición Física"}),e.jsx(t,{children:e.jsx(M,{placeholder:"Describe la condición física del árbol...",...a,value:a.value||""})}),e.jsx(d,{children:"Detalles sobre la condición física (inclinación, vigor, etc.)"}),e.jsx(u,{})]})}),e.jsxs("div",{className:"bg-gray-50 p-4 rounded-lg border border-gray-200",children:[e.jsx("h3",{className:"text-lg font-medium mb-4",children:"Condiciones Específicas"}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-4",children:[e.jsx(i,{control:n.control,name:"hasHollows",render:({field:a})=>e.jsxs(o,{className:"flex flex-row items-start space-x-3 space-y-0 p-4",children:[e.jsx(t,{children:e.jsx(S,{checked:a.value,onCheckedChange:a.onChange})}),e.jsxs("div",{className:"space-y-1 leading-none",children:[e.jsx(c,{children:"Presencia de Huecos"}),e.jsx(d,{children:"El árbol tiene cavidades o huecos"})]})]})}),e.jsx(i,{control:n.control,name:"hasExposedRoots",render:({field:a})=>e.jsxs(o,{className:"flex flex-row items-start space-x-3 space-y-0 p-4",children:[e.jsx(t,{children:e.jsx(S,{checked:a.value,onCheckedChange:a.onChange})}),e.jsxs("div",{className:"space-y-1 leading-none",children:[e.jsx(c,{children:"Raíces Expuestas"}),e.jsx(d,{children:"El árbol tiene raíces visibles en superficie"})]})]})}),e.jsx(i,{control:n.control,name:"hasPests",render:({field:a})=>e.jsxs(o,{className:"flex flex-row items-start space-x-3 space-y-0 p-4",children:[e.jsx(t,{children:e.jsx(S,{checked:a.value,onCheckedChange:a.onChange})}),e.jsxs("div",{className:"space-y-1 leading-none",children:[e.jsx(c,{children:"Presencia de Plagas"}),e.jsx(d,{children:"El árbol tiene signos de plagas o enfermedades"})]})]})})]})]}),e.jsx(be,{}),e.jsxs("div",{className:"grid grid-cols-1 gap-4",children:[e.jsx(i,{control:n.control,name:"observations",render:({field:a})=>e.jsxs(o,{children:[e.jsx(c,{children:"Observaciones Adicionales"}),e.jsx(t,{children:e.jsx(M,{placeholder:"Observaciones adicionales sobre el árbol...",className:"min-h-[100px]",...a,value:a.value||""})}),e.jsx(d,{children:"Cualquier información adicional relevante"}),e.jsx(u,{})]})}),e.jsx(i,{control:n.control,name:"isProtected",render:({field:a})=>e.jsxs(o,{className:"flex flex-row items-start space-x-3 space-y-0 p-4 border border-green-200 bg-green-50 rounded-lg",children:[e.jsx(t,{children:e.jsx(S,{checked:a.value,onCheckedChange:a.onChange})}),e.jsxs("div",{className:"space-y-1 leading-none",children:[e.jsx(c,{className:"text-green-800",children:"Árbol con Protección Especial"}),e.jsx(d,{className:"text-green-700",children:"Marcar si el árbol tiene alguna designación especial de protección"})]})]})})]})]}),e.jsxs($,{className:"flex justify-between",children:[e.jsxs("div",{className:"flex space-x-2",children:[e.jsx(m,{type:"button",variant:"outline",onClick:()=>p(`/admin/trees/inventory/${x}`),children:"Cancelar"}),e.jsx(m,{type:"button",variant:"outline",onClick:()=>b("characteristics"),children:"Anterior"})]}),e.jsx(m,{type:"submit",className:"bg-green-600 hover:bg-green-700",onClick:()=>console.log("🌳 BOTÓN GUARDAR CLICKEADO"),children:"Guardar Cambios"})]})]})})]})})})]})]})}export{Le as default};
