import{bT as ie,bU as g,cT as z,dg as le,dq as K,d as re,am as ce,e as de,a6 as ue,Y as v,u as L,a7 as me,a8 as ge,j as e,aI as $,B as S,A as B,C as G,a as Q,b as H,a3 as Z,c as _,aa as xe,ab as c,ac as d,ad as r,ae as u,I as C,af as m,z as F,H as R,J as q,K as M,N as V,O as J,M as pe,aA as k,bz as X,ah as je,ai as he}from"./index-Dzu3mJf5.js";import{L as ee,M as ve,T as Ne,a as Se}from"./leaflet-x_zWA9SN.js";import{S as Y}from"./skeleton-Die7Hc3c.js";import{S as W}from"./separator-DuAPTCUu.js";import{a as fe,u as ye}from"./hooks-Cq82ihwg.js";delete ee.Icon.Default.prototype._getIconUrl;ee.Icon.Default.mergeOptions({iconRetinaUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png",iconUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png",shadowUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png"});const be=ie({name:g().min(1,"El nombre es obligatorio"),description:g().default(""),serialNumber:g().default(""),parkId:z.number().min(1,"Debe seleccionar un parque"),categoryId:z.number().min(1,"Debe seleccionar una categoría"),amenityId:le([z.number(),K("none"),K("")]).optional(),status:g().min(1,"El estado es obligatorio"),condition:g().min(1,"La condición es obligatoria"),acquisitionDate:g().default(""),acquisitionCost:g().default(""),currentValue:g().default(""),location:g().default(""),latitude:g().default(""),longitude:g().default(""),notes:g().default("")});function Ce({center:p,selectedPosition:i}){const f=fe();return v.useEffect(()=>{p&&p[0]!==0&&p[1]!==0&&(console.log("MapUpdater: Centrando mapa en:",p),f.setView(p,16))},[p,f]),v.useEffect(()=>{i&&i[0]!==0&&i[1]!==0&&(console.log("MapUpdater: Actualizando posición seleccionada a:",i),f.setView(i,16))},[i,f]),null}function Ee({onLocationSelect:p}){return ye({click:i=>{const{lat:f,lng:E}=i.latlng;p(f,E)}}),null}const Ae=[{value:"active",label:"Activo"},{value:"maintenance",label:"En Mantenimiento"},{value:"retired",label:"Retirado"},{value:"storage",label:"En Almacén"}],Ie=[{value:"excellent",label:"Excelente"},{value:"good",label:"Bueno"},{value:"fair",label:"Regular"},{value:"poor",label:"Malo"},{value:"critical",label:"Crítico"}],qe=()=>{const i=re().id,[f,E]=ce(),{toast:A}=de(),O=ue(),[l,j]=v.useState(null),[U,h]=v.useState([20.6597,-103.3496]),ae=(a,n)=>{j([a,n]),t.setValue("latitude",a.toString()),t.setValue("longitude",n.toString())},{data:s,isLoading:ne}=L({queryKey:[`/api/assets/${i}`],enabled:!!i,staleTime:0,gcTime:0});v.useEffect(()=>{if(s&&s.latitude&&s.longitude){const a=parseFloat(s.latitude),n=parseFloat(s.longitude);!isNaN(a)&&!isNaN(n)&&(console.log("=== COORDINADAS DETECTADAS EN ASSET ==="),console.log("Asset coords:",{lat:a,lng:n}),setTimeout(()=>{j([a,n]),h([a,n]),console.log("=== MAPA FORZADO A COORDENADAS ==="),console.log("Posición forzada:",[a,n])},500))}},[s]);const{data:N,isLoading:se}=L({queryKey:["/api/parks"]}),{data:w,isLoading:te}=L({queryKey:["/api/asset-categories"]}),t=me({resolver:je(be),defaultValues:{name:"",description:"",serialNumber:"",parkId:1,categoryId:1,amenityId:"none",status:"activo",condition:"bueno",acquisitionDate:"",acquisitionCost:"",location:"",latitude:"",longitude:"",notes:""}});v.useEffect(()=>{if(s&&(console.log("=== CARGANDO DATOS DEL ACTIVO EN FORMULARIO ==="),console.log("Asset recibido:",s),console.log("Coordenadas del asset:",{lat:s.latitude,lng:s.longitude}),t.reset({name:s.name||"",description:s.description||"",serialNumber:s.serialNumber||"",parkId:s.parkId||1,categoryId:s.categoryId||1,amenityId:s.amenityId?String(s.amenityId):"none",status:s.status||"activo",condition:s.condition||"bueno",acquisitionDate:s.acquisitionDate||"",acquisitionCost:s.acquisitionCost?String(s.acquisitionCost):"",currentValue:s.currentValue?String(s.currentValue):"",location:s.locationDescription||"",latitude:s.latitude?String(s.latitude):"",longitude:s.longitude?String(s.longitude):"",notes:s.notes||""}),console.log("Formulario reseteado con coordenadas:",{lat:s.latitude?String(s.latitude):"",lng:s.longitude?String(s.longitude):""}),setTimeout(()=>{t.setValue("latitude",s.latitude?String(s.latitude):""),t.setValue("longitude",s.longitude?String(s.longitude):""),console.log("=== VALORES FORZADOS EN CAMPOS ==="),console.log("Latitud forzada:",s.latitude?String(s.latitude):""),console.log("Longitud forzada:",s.longitude?String(s.longitude):"")},100),s.latitude&&s.longitude)){const a=parseFloat(s.latitude),n=parseFloat(s.longitude);!isNaN(a)&&!isNaN(n)&&(j([a,n]),h([a,n]),console.log("=== MAPA ACTUALIZADO ==="),console.log("Nueva posición del mapa:",[a,n]))}},[s,t]);const T=t.watch("parkId"),{data:I,isLoading:De}=L({queryKey:[`/api/parks/${T}/amenities`],enabled:!!T});L({queryKey:["/api/users"]});const D=ge({mutationFn:async a=>(console.log("=== ENVIANDO DATOS AL SERVIDOR ==="),console.log("URL:",`/api/assets/${i}`),console.log("Datos enviados:",JSON.stringify(a,null,2)),await(await he(`/api/assets/${i}`,{method:"PUT",data:a})).json()),onSuccess:a=>{if(console.log("=== RESPUESTA EXITOSA DEL SERVIDOR ==="),console.log("Respuesta:",a),O.invalidateQueries({queryKey:[`/api/assets/${i}`]}),O.invalidateQueries({queryKey:["/api/assets"]}),O.invalidateQueries({queryKey:["/api/assets",i]}),O.refetchQueries({queryKey:[`/api/assets/${i}`]}),a.latitude&&a.longitude){t.setValue("latitude",String(a.latitude)),t.setValue("longitude",String(a.longitude));const n=parseFloat(a.latitude),o=parseFloat(a.longitude);!isNaN(n)&&!isNaN(o)&&(j([n,o]),h([n,o])),console.log("=== CAMPOS ACTUALIZADOS INMEDIATAMENTE ==="),console.log("Nuevas coordenadas aplicadas:",{lat:a.latitude,lng:a.longitude})}A({title:"Activo actualizado",description:"El activo se ha actualizado correctamente."}),E(`/admin/assets/${i}`)},onError:a=>{console.log("=== ERROR DEL SERVIDOR ==="),console.log("Error completo:",a),A({title:"Error",description:"Ha ocurrido un error al actualizar el activo.",variant:"destructive"}),console.error("Error al actualizar activo:",a)}}),oe=a=>{console.log("=== DATOS DEL FORMULARIO ==="),console.log("Datos originales del formulario:",a),console.log("Posición seleccionada en mapa:",l),console.log("Errores del formulario:",t.formState.errors);const n={...a,amenityId:a.amenityId==="none"?null:a.amenityId,latitude:l?l[0].toString():a.latitude,longitude:l?l[1].toString():a.longitude};console.log("Datos procesados para enviar:",n),D.mutate(n)},P=async()=>{console.log("=== ENVÍO DIRECTO ACTIVADO ===");try{const a=t.getValues();if(console.log("Valores actuales del formulario:",a),!a.name||a.name.trim()===""){A({title:"Error de validación",description:"El nombre del activo es obligatorio.",variant:"destructive"});return}if(!a.parkId){A({title:"Error de validación",description:"Debe seleccionar un parque.",variant:"destructive"});return}if(!a.categoryId){A({title:"Error de validación",description:"Debe seleccionar una categoría.",variant:"destructive"});return}const n={name:a.name.trim(),description:a.description||null,serialNumber:a.serialNumber||null,parkId:Number(a.parkId),categoryId:Number(a.categoryId),amenityId:a.amenityId==="none"?null:Number(a.amenityId),status:a.status||"activo",condition:a.condition||"bueno",acquisitionDate:a.acquisitionDate||null,acquisitionCost:a.acquisitionCost||null,currentValue:a.currentValue||null,location:a.location||null,latitude:l?l[0].toString():a.latitude||null,longitude:l?l[1].toString():a.longitude||null,notes:a.notes||null};console.log("Datos preparados para envío directo:",n),D.mutate(n)}catch(a){console.error("Error en envío directo:",a),A({title:"Error",description:"Ha ocurrido un error al procesar los datos.",variant:"destructive"})}};return v.useEffect(()=>{if(T&&N){const a=N.find(n=>n.id===T);if(a&&a.latitude&&a.longitude){const n=parseFloat(a.latitude),o=parseFloat(a.longitude);!isNaN(n)&&!isNaN(o)&&h([n,o])}}},[T,N]),v.useEffect(()=>{if(s&&s.latitude&&s.longitude&&N){const a=parseFloat(s.latitude),n=parseFloat(s.longitude);!isNaN(a)&&!isNaN(n)&&(h([a,n]),j([a,n]))}},[s,N]),v.useEffect(()=>{const a=t.watch("amenityId");if(a==="none"||a===""||a===null||a===void 0)t.setValue("location","Sin amenidad");else if(a&&I){const n=I.find(o=>o.amenityId===parseInt(a)||o.id===parseInt(a));if(n){const o=n.amenityName||n.name;o&&t.setValue("location",o)}}},[t.watch("amenityId"),I,t]),ne||se||te?e.jsx($,{children:e.jsxs("div",{className:"container py-6",children:[e.jsx("div",{className:"mb-6",children:e.jsxs(S,{variant:"outline",onClick:()=>E(`/admin/assets/${i}`),children:[e.jsx(B,{className:"mr-2 h-4 w-4"}),"Volver al Activo"]})}),e.jsxs("div",{className:"space-y-6",children:[e.jsx(Y,{className:"h-8 w-96"}),e.jsx(Y,{className:"h-64 w-full"})]})]})}):e.jsx($,{children:e.jsxs("div",{className:"container py-6",children:[e.jsx("div",{className:"mb-6",children:e.jsxs(S,{variant:"outline",onClick:()=>E(`/admin/assets/${i}`),children:[e.jsx(B,{className:"mr-2 h-4 w-4"}),"Volver al Activo"]})}),e.jsxs(G,{children:[e.jsxs(Q,{children:[e.jsx(H,{className:"text-xl",children:"Editar Activo"}),e.jsxs(Z,{children:["Edita la información del activo: ",s==null?void 0:s.name]})]}),e.jsx(_,{children:e.jsx(xe,{...t,children:e.jsxs("form",{onSubmit:a=>{console.log("=== EVENTO SUBMIT INTERCEPTADO ==="),a.preventDefault(),console.log("Valores antes de validación:",t.getValues()),console.log("Errores de validación:",t.formState.errors),t.handleSubmit(oe)(a)},className:"space-y-6",children:[e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[e.jsxs("div",{className:"space-y-4",children:[e.jsx("h3",{className:"text-lg font-medium",children:"Información Básica"}),e.jsx(W,{}),e.jsx(c,{control:t.control,name:"name",render:({field:a})=>e.jsxs(d,{children:[e.jsx(r,{children:"Nombre*"}),e.jsx(u,{children:e.jsx(C,{...a})}),e.jsx(m,{})]})}),e.jsx(c,{control:t.control,name:"serialNumber",render:({field:a})=>e.jsxs(d,{children:[e.jsx(r,{children:"Número de Serie"}),e.jsx(u,{children:e.jsx(C,{placeholder:"Número de serie",...a,value:a.value||""})}),e.jsx(m,{})]})}),e.jsx(c,{control:t.control,name:"parkId",render:({field:a})=>{var n;return e.jsxs(d,{children:[e.jsx(r,{children:"Parque*"}),e.jsx(u,{children:e.jsxs(F,{value:(n=a.value)==null?void 0:n.toString(),onValueChange:o=>a.onChange(parseInt(o)),children:[e.jsx(R,{children:e.jsx(q,{placeholder:"Seleccione un parque"})}),e.jsx(M,{children:N==null?void 0:N.map(o=>e.jsx(V,{value:o.id.toString(),children:o.name},o.id))})]})}),e.jsx(m,{})]})}}),e.jsx(c,{control:t.control,name:"categoryId",render:({field:a})=>{var n;return e.jsxs(d,{children:[e.jsx(r,{children:"Categoría*"}),e.jsx(u,{children:e.jsxs(F,{value:(n=a.value)==null?void 0:n.toString(),onValueChange:o=>a.onChange(parseInt(o)),children:[e.jsx(R,{children:e.jsx(q,{placeholder:"Seleccione una categoría"})}),e.jsx(M,{children:w==null?void 0:w.map(o=>e.jsx(V,{value:o.id.toString(),children:o.name},o.id))})]})}),e.jsx(m,{})]})}}),e.jsx(c,{control:t.control,name:"description",render:({field:a})=>e.jsxs(d,{children:[e.jsx(r,{children:"Descripción"}),e.jsx(u,{children:e.jsx(J,{placeholder:"Descripción del activo",...a,value:a.value||""})}),e.jsx(m,{})]})})]}),e.jsxs("div",{className:"space-y-4",children:[e.jsx("h3",{className:"text-lg font-medium",children:"Estado y Condición"}),e.jsx(W,{}),e.jsx(c,{control:t.control,name:"status",render:({field:a})=>e.jsxs(d,{children:[e.jsx(r,{children:"Estado*"}),e.jsx(u,{children:e.jsxs(F,{value:a.value,onValueChange:a.onChange,children:[e.jsx(R,{children:e.jsx(q,{placeholder:"Seleccione un estado"})}),e.jsx(M,{children:Ae.map(n=>e.jsx(V,{value:n.value,children:n.label},n.value))})]})}),e.jsx(m,{})]})}),e.jsx(c,{control:t.control,name:"condition",render:({field:a})=>e.jsxs(d,{children:[e.jsx(r,{children:"Condición*"}),e.jsx(u,{children:e.jsxs(F,{value:a.value,onValueChange:a.onChange,children:[e.jsx(R,{children:e.jsx(q,{placeholder:"Seleccione una condición"})}),e.jsx(M,{children:Ie.map(n=>e.jsx(V,{value:n.value,children:n.label},n.value))})]})}),e.jsx(m,{})]})}),e.jsx(c,{control:t.control,name:"acquisitionDate",render:({field:a})=>e.jsxs(d,{children:[e.jsx(r,{children:"Fecha de Adquisición"}),e.jsx(u,{children:e.jsx(C,{type:"date",...a,value:a.value||""})}),e.jsx(m,{})]})}),e.jsx(c,{control:t.control,name:"acquisitionCost",render:({field:a})=>e.jsxs(d,{children:[e.jsx(r,{children:"Costo de Adquisición"}),e.jsx(u,{children:e.jsx(C,{type:"number",step:"0.01",placeholder:"Costo en pesos",...a,value:a.value===null?"":a.value,onChange:n=>a.onChange(n.target.value===""?null:parseFloat(n.target.value))})}),e.jsx(m,{})]})}),e.jsx(c,{control:t.control,name:"notes",render:({field:a})=>e.jsxs(d,{children:[e.jsx(r,{children:"Notas Adicionales"}),e.jsx(u,{children:e.jsx(J,{placeholder:"Notas o comentarios adicionales",...a,value:a.value||""})}),e.jsx(m,{})]})})]})]}),e.jsxs(G,{children:[e.jsxs(Q,{children:[e.jsxs(H,{className:"flex items-center gap-2",children:[e.jsx(pe,{className:"h-5 w-5"}),"Ubicación del Activo"]}),e.jsx(Z,{children:"Selecciona la ubicación exacta del activo en el mapa"})]}),e.jsxs(_,{className:"space-y-4",children:[e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsx(c,{control:t.control,name:"location",render:({field:a})=>e.jsxs(d,{children:[e.jsx(r,{children:"Descripción de Ubicación"}),e.jsx(u,{children:e.jsx(C,{placeholder:"Ej: Cerca de la entrada principal",...a,value:a.value||""})}),e.jsx(k,{children:"Descripción textual de la ubicación"}),e.jsx(m,{})]})}),e.jsx(c,{control:t.control,name:"amenityId",render:({field:a})=>{var n;return e.jsxs(d,{children:[e.jsx(r,{children:"Amenidad (Opcional)"}),e.jsxs(F,{onValueChange:a.onChange,value:((n=a.value)==null?void 0:n.toString())||"none",children:[e.jsx(u,{children:e.jsx(R,{className:"z-50",children:e.jsx(q,{placeholder:"Seleccionar amenidad"})})}),e.jsxs(M,{className:"z-50",children:[e.jsx(V,{value:"none",children:"Sin amenidad"}),I==null?void 0:I.map(o=>e.jsx(V,{value:(o.amenityId||o.id).toString(),children:o.amenityName||o.name||"Amenidad sin nombre"},o.amenityId||o.id))]})]}),e.jsx(k,{children:"Amenidad asociada con este activo"}),e.jsx(m,{})]})}})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx(r,{children:"Seleccionar ubicación en el mapa"}),e.jsxs("div",{className:"flex gap-2",children:[e.jsx(S,{type:"button",variant:"outline",size:"sm",onClick:()=>{if(s!=null&&s.latitude&&(s!=null&&s.longitude)){const a=parseFloat(s.latitude),n=parseFloat(s.longitude);!isNaN(a)&&!isNaN(n)&&(j([a,n]),h([a,n]),console.log("Mapa recentrado manualmente a:",[a,n]))}},children:"📍 Recentrar"}),e.jsx(S,{type:"button",variant:"outline",size:"sm",onClick:()=>{const a=t.getValues("latitude"),n=t.getValues("longitude");if(a&&n){const o=parseFloat(a),x=parseFloat(n);!isNaN(o)&&!isNaN(x)&&(j([o,x]),h([o,x]),console.log("Sincronizando desde campos:",[o,x]))}},children:"🔄 Sincronizar"}),e.jsx(S,{type:"button",variant:"secondary",size:"sm",onClick:()=>{O.invalidateQueries({queryKey:[`/api/assets/${i}`]}),setTimeout(()=>{window.location.reload()},1e3)},children:"🔃 Recargar"})]})]}),e.jsx("div",{className:"h-96 w-full border rounded-lg overflow-hidden",children:e.jsxs(ve,{center:U,zoom:13,style:{height:"100%",width:"100%"},className:"z-0",children:[e.jsx(Ne,{attribution:'© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"}),e.jsx(Ce,{center:U,selectedPosition:l}),e.jsx(Ee,{onLocationSelect:ae}),l&&e.jsx(Se,{position:l})]})}),e.jsxs("div",{className:"flex items-center justify-between text-sm text-muted-foreground",children:[e.jsx("span",{children:"Haz clic en el mapa para seleccionar la ubicación exacta del activo."}),l&&e.jsxs("span",{className:"px-2 py-1 bg-green-100 text-green-800 rounded-md text-xs",children:["✓ Mapa sincronizado (",l[0].toFixed(6),", ",l[1].toFixed(6),")"]})]})]}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsx(c,{control:t.control,name:"latitude",render:({field:a})=>{var n;return e.jsxs(d,{children:[e.jsx(r,{children:"Latitud"}),e.jsx(u,{children:e.jsx(C,{placeholder:"Ej: 20.659698",...a,value:((n=a.value)==null?void 0:n.toString())||"",onChange:o=>{const x=o.target.value.trim().replace(/,+$/,"");a.onChange(x);const y=parseFloat(x),b=parseFloat(t.getValues("longitude").toString().trim().replace(/^[\s,]+/,""));!isNaN(y)&&!isNaN(b)&&(j([y,b]),h([y,b]))}})}),e.jsx(k,{children:"Edita manualmente o selecciona en el mapa"}),e.jsx(m,{})]})}}),e.jsx(c,{control:t.control,name:"longitude",render:({field:a})=>{var n;return e.jsxs(d,{children:[e.jsx(r,{children:"Longitud"}),e.jsx(u,{children:e.jsx(C,{placeholder:"Ej: -103.349609",...a,value:((n=a.value)==null?void 0:n.toString())||"",onChange:o=>{const x=o.target.value.trim().replace(/^[\s,]+/,"");a.onChange(x);const y=parseFloat(x),b=parseFloat(t.getValues("latitude").toString().trim().replace(/,+$/,""));!isNaN(b)&&!isNaN(y)&&(j([b,y]),h([b,y]))}})}),e.jsx(k,{children:"Edita manualmente o selecciona en el mapa"}),e.jsx(m,{})]})}})]})]})]}),e.jsxs("div",{className:"flex justify-end gap-4",children:[e.jsx(S,{variant:"outline",onClick:()=>E(`/admin/assets/${i}`),type:"button",children:"Cancelar"}),e.jsxs(S,{type:"button",disabled:D.isPending,onClick:()=>{console.log("=== BOTÓN GUARDAR CLICKEADO ==="),console.log("Errores de validación:",t.formState.errors),console.log("Estado del formulario válido:",t.formState.isValid),console.log("Valores actuales del formulario:",t.getValues()),P()},children:[D.isPending?"Guardando...":"Guardar Cambios",e.jsx(X,{className:"ml-2 h-4 w-4"})]}),e.jsxs(S,{type:"button",onClick:()=>{console.log("BOTÓN GUARDAR DIRECTO CLICKEADO"),P()},disabled:D.isPending,variant:"secondary",children:[D.isPending?"Guardando...":"Guardar Directo",e.jsx(X,{className:"ml-2 h-4 w-4"})]})]})]})})})]})]})})};export{qe as default};
