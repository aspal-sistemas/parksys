import{ce as ie,cf as p,cU as z,dj as le,dt as $,k as re,az as ce,l as de,ae as ue,a2 as N,u as L,af as me,ag as ge,j as e,aX as K,B as S,A as G,f as Q,g as B,h as H,ab as _,i as Z,ai as xe,aj as d,ak as u,al as r,am as m,O as A,an as g,Q as F,V as R,W as q,Y as k,_ as V,$ as X,M as pe,aF as M,bG as J,ap as je,aq as he}from"./index-D5qLf1ib.js";import{L as ee,M as ve,T as Ne,a as Se}from"./leaflet-CDEiJxZW.js";import{S as W}from"./skeleton-XQWc31Aw.js";import{S as Y}from"./separator-Bek7HtsH.js";import{a as fe,u as ye}from"./hooks-ByDnCwIh.js";delete ee.Icon.Default.prototype._getIconUrl;ee.Icon.Default.mergeOptions({iconRetinaUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png",iconUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png",shadowUrl:"https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png"});const be=ie({name:p().min(1,"El nombre es obligatorio"),description:p().default(""),serialNumber:p().default(""),parkId:z.number().min(1,"Debe seleccionar un parque"),categoryId:z.number().min(1,"Debe seleccionar una categoría"),amenityId:le([z.number(),$("none"),$("")]).optional(),status:p().min(1,"El estado es obligatorio"),condition:p().min(1,"La condición es obligatoria"),acquisitionDate:p().default(""),acquisitionCost:p().default(""),currentValue:p().default(""),location:p().default(""),latitude:p().default(""),longitude:p().default(""),notes:p().default("")});function Ae({center:j,selectedPosition:i}){const f=fe();return N.useEffect(()=>{j&&j[0]!==0&&j[1]!==0&&(console.log("MapUpdater: Centrando mapa en:",j),f.setView(j,16))},[j,f]),N.useEffect(()=>{i&&i[0]!==0&&i[1]!==0&&(console.log("MapUpdater: Actualizando posición seleccionada a:",i),f.setView(i,16))},[i,f]),null}function Ce({onLocationSelect:j}){return ye({click:i=>{const{lat:f,lng:C}=i.latlng;j(f,C)}}),null}const Ee=[{value:"active",label:"Activo"},{value:"maintenance",label:"En Mantenimiento"},{value:"retired",label:"Retirado"},{value:"storage",label:"En Almacén"}],Ie=[{value:"excellent",label:"Excelente"},{value:"good",label:"Bueno"},{value:"fair",label:"Regular"},{value:"poor",label:"Malo"},{value:"critical",label:"Crítico"}],qe=()=>{const i=re().id,[f,C]=ce(),{toast:E}=de(),O=ue(),[l,h]=N.useState(null),[U,v]=N.useState([20.6597,-103.3496]),ae=(a,n)=>{h([a,n]),o.setValue("latitude",a.toString()),o.setValue("longitude",n.toString())},{data:s,isLoading:ne}=L({queryKey:[`/api/assets/${i}`],enabled:!!i,staleTime:0,gcTime:0});N.useEffect(()=>{if(s&&s.latitude&&s.longitude){const a=parseFloat(s.latitude),n=parseFloat(s.longitude);!isNaN(a)&&!isNaN(n)&&(console.log("=== COORDINADAS DETECTADAS EN ASSET ==="),console.log("Asset coords:",{lat:a,lng:n}),setTimeout(()=>{h([a,n]),v([a,n]),console.log("=== MAPA FORZADO A COORDENADAS ==="),console.log("Posición forzada:",[a,n])},500))}},[s]);const{data:c,isLoading:se}=L({queryKey:["/api/parks"]}),{data:w,isLoading:te}=L({queryKey:["/api/asset-categories"]}),o=me({resolver:je(be),defaultValues:{name:"",description:"",serialNumber:"",parkId:1,categoryId:1,amenityId:"none",status:"activo",condition:"bueno",acquisitionDate:"",acquisitionCost:"",location:"",latitude:"",longitude:"",notes:""}});N.useEffect(()=>{if(s&&(console.log("=== CARGANDO DATOS DEL ACTIVO EN FORMULARIO ==="),console.log("Asset recibido:",s),console.log("Coordenadas del asset:",{lat:s.latitude,lng:s.longitude}),o.reset({name:s.name||"",description:s.description||"",serialNumber:s.serialNumber||"",parkId:s.parkId||1,categoryId:s.categoryId||1,amenityId:s.amenityId?String(s.amenityId):"none",status:s.status||"activo",condition:s.condition||"bueno",acquisitionDate:s.acquisitionDate||"",acquisitionCost:s.acquisitionCost?String(s.acquisitionCost):"",currentValue:s.currentValue?String(s.currentValue):"",location:s.locationDescription||"",latitude:s.latitude?String(s.latitude):"",longitude:s.longitude?String(s.longitude):"",notes:s.notes||""}),console.log("Formulario reseteado con coordenadas:",{lat:s.latitude?String(s.latitude):"",lng:s.longitude?String(s.longitude):""}),setTimeout(()=>{o.setValue("latitude",s.latitude?String(s.latitude):""),o.setValue("longitude",s.longitude?String(s.longitude):""),console.log("=== VALORES FORZADOS EN CAMPOS ==="),console.log("Latitud forzada:",s.latitude?String(s.latitude):""),console.log("Longitud forzada:",s.longitude?String(s.longitude):"")},100),s.latitude&&s.longitude)){const a=parseFloat(s.latitude),n=parseFloat(s.longitude);!isNaN(a)&&!isNaN(n)&&(h([a,n]),v([a,n]),console.log("=== MAPA ACTUALIZADO ==="),console.log("Nueva posición del mapa:",[a,n]))}},[s,o]);const T=o.watch("parkId"),{data:I,isLoading:De}=L({queryKey:[`/api/parks/${T}/amenities`],enabled:!!T});L({queryKey:["/api/users"]});const D=ge({mutationFn:async a=>(console.log("=== ENVIANDO DATOS AL SERVIDOR ==="),console.log("URL:",`/api/assets/${i}`),console.log("Datos enviados:",JSON.stringify(a,null,2)),await(await he(`/api/assets/${i}`,{method:"PUT",data:a})).json()),onSuccess:a=>{if(console.log("=== RESPUESTA EXITOSA DEL SERVIDOR ==="),console.log("Respuesta:",a),O.invalidateQueries({queryKey:[`/api/assets/${i}`]}),O.invalidateQueries({queryKey:["/api/assets"]}),O.invalidateQueries({queryKey:["/api/assets",i]}),O.refetchQueries({queryKey:[`/api/assets/${i}`]}),a.latitude&&a.longitude){o.setValue("latitude",String(a.latitude)),o.setValue("longitude",String(a.longitude));const n=parseFloat(a.latitude),t=parseFloat(a.longitude);!isNaN(n)&&!isNaN(t)&&(h([n,t]),v([n,t])),console.log("=== CAMPOS ACTUALIZADOS INMEDIATAMENTE ==="),console.log("Nuevas coordenadas aplicadas:",{lat:a.latitude,lng:a.longitude})}E({title:"Activo actualizado",description:"El activo se ha actualizado correctamente."}),C(`/admin/assets/${i}`)},onError:a=>{console.log("=== ERROR DEL SERVIDOR ==="),console.log("Error completo:",a),E({title:"Error",description:"Ha ocurrido un error al actualizar el activo.",variant:"destructive"}),console.error("Error al actualizar activo:",a)}}),oe=a=>{console.log("=== DATOS DEL FORMULARIO ==="),console.log("Datos originales del formulario:",a),console.log("Posición seleccionada en mapa:",l),console.log("Errores del formulario:",o.formState.errors);const n={...a,amenityId:a.amenityId==="none"?null:a.amenityId,latitude:l?l[0].toString():a.latitude,longitude:l?l[1].toString():a.longitude};console.log("Datos procesados para enviar:",n),D.mutate(n)},P=async()=>{console.log("=== ENVÍO DIRECTO ACTIVADO ===");try{const a=o.getValues();if(console.log("Valores actuales del formulario:",a),!a.name||a.name.trim()===""){E({title:"Error de validación",description:"El nombre del activo es obligatorio.",variant:"destructive"});return}if(!a.parkId){E({title:"Error de validación",description:"Debe seleccionar un parque.",variant:"destructive"});return}if(!a.categoryId){E({title:"Error de validación",description:"Debe seleccionar una categoría.",variant:"destructive"});return}const n={name:a.name.trim(),description:a.description||null,serialNumber:a.serialNumber||null,parkId:Number(a.parkId),categoryId:Number(a.categoryId),amenityId:a.amenityId==="none"?null:Number(a.amenityId),status:a.status||"activo",condition:a.condition||"bueno",acquisitionDate:a.acquisitionDate||null,acquisitionCost:a.acquisitionCost||null,currentValue:a.currentValue||null,location:a.location||null,latitude:l?l[0].toString():a.latitude||null,longitude:l?l[1].toString():a.longitude||null,notes:a.notes||null};console.log("Datos preparados para envío directo:",n),D.mutate(n)}catch(a){console.error("Error en envío directo:",a),E({title:"Error",description:"Ha ocurrido un error al procesar los datos.",variant:"destructive"})}};return N.useEffect(()=>{if(T&&c){const n=(Array.isArray(c)?c:(c==null?void 0:c.data)||[]).find(t=>t.id===T);if(n&&n.latitude&&n.longitude){const t=parseFloat(n.latitude),x=parseFloat(n.longitude);!isNaN(t)&&!isNaN(x)&&v([t,x])}}},[T,c]),N.useEffect(()=>{if(s&&s.latitude&&s.longitude&&c){const a=parseFloat(s.latitude),n=parseFloat(s.longitude);!isNaN(a)&&!isNaN(n)&&(v([a,n]),h([a,n]))}},[s,c]),N.useEffect(()=>{const a=o.watch("amenityId");if(a==="none"||a===""||a===null||a===void 0)o.setValue("location","Sin amenidad");else if(a&&I){const n=I.find(t=>t.amenityId===parseInt(a)||t.id===parseInt(a));if(n){const t=n.amenityName||n.name;t&&o.setValue("location",t)}}},[o.watch("amenityId"),I,o]),ne||se||te?e.jsx(K,{children:e.jsxs("div",{className:"container py-6",children:[e.jsx("div",{className:"mb-6",children:e.jsxs(S,{variant:"outline",onClick:()=>C(`/admin/assets/${i}`),children:[e.jsx(G,{className:"mr-2 h-4 w-4"}),"Volver al Activo"]})}),e.jsxs("div",{className:"space-y-6",children:[e.jsx(W,{className:"h-8 w-96"}),e.jsx(W,{className:"h-64 w-full"})]})]})}):e.jsx(K,{children:e.jsxs("div",{className:"container py-6",children:[e.jsx("div",{className:"mb-6",children:e.jsxs(S,{variant:"outline",onClick:()=>C(`/admin/assets/${i}`),children:[e.jsx(G,{className:"mr-2 h-4 w-4"}),"Volver al Activo"]})}),e.jsxs(Q,{children:[e.jsxs(B,{children:[e.jsx(H,{className:"text-xl",children:"Editar Activo"}),e.jsxs(_,{children:["Edita la información del activo: ",s==null?void 0:s.name]})]}),e.jsx(Z,{children:e.jsx(xe,{...o,children:e.jsxs("form",{onSubmit:a=>{console.log("=== EVENTO SUBMIT INTERCEPTADO ==="),a.preventDefault(),console.log("Valores antes de validación:",o.getValues()),console.log("Errores de validación:",o.formState.errors),o.handleSubmit(oe)(a)},className:"space-y-6",children:[e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[e.jsxs("div",{className:"space-y-4",children:[e.jsx("h3",{className:"text-lg font-medium",children:"Información Básica"}),e.jsx(Y,{}),e.jsx(d,{control:o.control,name:"name",render:({field:a})=>e.jsxs(u,{children:[e.jsx(r,{children:"Nombre*"}),e.jsx(m,{children:e.jsx(A,{...a})}),e.jsx(g,{})]})}),e.jsx(d,{control:o.control,name:"serialNumber",render:({field:a})=>e.jsxs(u,{children:[e.jsx(r,{children:"Número de Serie"}),e.jsx(m,{children:e.jsx(A,{placeholder:"Número de serie",...a,value:a.value||""})}),e.jsx(g,{})]})}),e.jsx(d,{control:o.control,name:"parkId",render:({field:a})=>{var n;return e.jsxs(u,{children:[e.jsx(r,{children:"Parque*"}),e.jsx(m,{children:e.jsxs(F,{value:(n=a.value)==null?void 0:n.toString(),onValueChange:t=>a.onChange(parseInt(t)),children:[e.jsx(R,{children:e.jsx(q,{placeholder:"Seleccione un parque"})}),e.jsx(k,{children:(Array.isArray(c)?c:(c==null?void 0:c.data)||[]).map(t=>e.jsx(V,{value:t.id.toString(),children:t.name},t.id))})]})}),e.jsx(g,{})]})}}),e.jsx(d,{control:o.control,name:"categoryId",render:({field:a})=>{var n;return e.jsxs(u,{children:[e.jsx(r,{children:"Categoría*"}),e.jsx(m,{children:e.jsxs(F,{value:(n=a.value)==null?void 0:n.toString(),onValueChange:t=>a.onChange(parseInt(t)),children:[e.jsx(R,{children:e.jsx(q,{placeholder:"Seleccione una categoría"})}),e.jsx(k,{children:w==null?void 0:w.map(t=>e.jsx(V,{value:t.id.toString(),children:t.name},t.id))})]})}),e.jsx(g,{})]})}}),e.jsx(d,{control:o.control,name:"description",render:({field:a})=>e.jsxs(u,{children:[e.jsx(r,{children:"Descripción"}),e.jsx(m,{children:e.jsx(X,{placeholder:"Descripción del activo",...a,value:a.value||""})}),e.jsx(g,{})]})})]}),e.jsxs("div",{className:"space-y-4",children:[e.jsx("h3",{className:"text-lg font-medium",children:"Estado y Condición"}),e.jsx(Y,{}),e.jsx(d,{control:o.control,name:"status",render:({field:a})=>e.jsxs(u,{children:[e.jsx(r,{children:"Estado*"}),e.jsx(m,{children:e.jsxs(F,{value:a.value,onValueChange:a.onChange,children:[e.jsx(R,{children:e.jsx(q,{placeholder:"Seleccione un estado"})}),e.jsx(k,{children:Ee.map(n=>e.jsx(V,{value:n.value,children:n.label},n.value))})]})}),e.jsx(g,{})]})}),e.jsx(d,{control:o.control,name:"condition",render:({field:a})=>e.jsxs(u,{children:[e.jsx(r,{children:"Condición*"}),e.jsx(m,{children:e.jsxs(F,{value:a.value,onValueChange:a.onChange,children:[e.jsx(R,{children:e.jsx(q,{placeholder:"Seleccione una condición"})}),e.jsx(k,{children:Ie.map(n=>e.jsx(V,{value:n.value,children:n.label},n.value))})]})}),e.jsx(g,{})]})}),e.jsx(d,{control:o.control,name:"acquisitionDate",render:({field:a})=>e.jsxs(u,{children:[e.jsx(r,{children:"Fecha de Adquisición"}),e.jsx(m,{children:e.jsx(A,{type:"date",...a,value:a.value||""})}),e.jsx(g,{})]})}),e.jsx(d,{control:o.control,name:"acquisitionCost",render:({field:a})=>e.jsxs(u,{children:[e.jsx(r,{children:"Costo de Adquisición"}),e.jsx(m,{children:e.jsx(A,{type:"number",step:"0.01",placeholder:"Costo en pesos",...a,value:a.value===null?"":a.value,onChange:n=>a.onChange(n.target.value===""?null:parseFloat(n.target.value))})}),e.jsx(g,{})]})}),e.jsx(d,{control:o.control,name:"notes",render:({field:a})=>e.jsxs(u,{children:[e.jsx(r,{children:"Notas Adicionales"}),e.jsx(m,{children:e.jsx(X,{placeholder:"Notas o comentarios adicionales",...a,value:a.value||""})}),e.jsx(g,{})]})})]})]}),e.jsxs(Q,{children:[e.jsxs(B,{children:[e.jsxs(H,{className:"flex items-center gap-2",children:[e.jsx(pe,{className:"h-5 w-5"}),"Ubicación del Activo"]}),e.jsx(_,{children:"Selecciona la ubicación exacta del activo en el mapa"})]}),e.jsxs(Z,{className:"space-y-4",children:[e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsx(d,{control:o.control,name:"location",render:({field:a})=>e.jsxs(u,{children:[e.jsx(r,{children:"Descripción de Ubicación"}),e.jsx(m,{children:e.jsx(A,{placeholder:"Ej: Cerca de la entrada principal",...a,value:a.value||""})}),e.jsx(M,{children:"Descripción textual de la ubicación"}),e.jsx(g,{})]})}),e.jsx(d,{control:o.control,name:"amenityId",render:({field:a})=>{var n;return e.jsxs(u,{children:[e.jsx(r,{children:"Amenidad (Opcional)"}),e.jsxs(F,{onValueChange:a.onChange,value:((n=a.value)==null?void 0:n.toString())||"none",children:[e.jsx(m,{children:e.jsx(R,{className:"z-50",children:e.jsx(q,{placeholder:"Seleccionar amenidad"})})}),e.jsxs(k,{className:"z-50",children:[e.jsx(V,{value:"none",children:"Sin amenidad"}),I==null?void 0:I.map(t=>e.jsx(V,{value:(t.amenityId||t.id).toString(),children:t.amenityName||t.name||"Amenidad sin nombre"},t.amenityId||t.id))]})]}),e.jsx(M,{children:"Amenidad asociada con este activo"}),e.jsx(g,{})]})}})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx(r,{children:"Seleccionar ubicación en el mapa"}),e.jsxs("div",{className:"flex gap-2",children:[e.jsx(S,{type:"button",variant:"outline",size:"sm",onClick:()=>{if(s!=null&&s.latitude&&(s!=null&&s.longitude)){const a=parseFloat(s.latitude),n=parseFloat(s.longitude);!isNaN(a)&&!isNaN(n)&&(h([a,n]),v([a,n]),console.log("Mapa recentrado manualmente a:",[a,n]))}},children:"📍 Recentrar"}),e.jsx(S,{type:"button",variant:"outline",size:"sm",onClick:()=>{const a=o.getValues("latitude"),n=o.getValues("longitude");if(a&&n){const t=parseFloat(a),x=parseFloat(n);!isNaN(t)&&!isNaN(x)&&(h([t,x]),v([t,x]),console.log("Sincronizando desde campos:",[t,x]))}},children:"🔄 Sincronizar"}),e.jsx(S,{type:"button",variant:"secondary",size:"sm",onClick:()=>{O.invalidateQueries({queryKey:[`/api/assets/${i}`]}),setTimeout(()=>{window.location.reload()},1e3)},children:"🔃 Recargar"})]})]}),e.jsx("div",{className:"h-96 w-full border rounded-lg overflow-hidden",children:e.jsxs(ve,{center:U,zoom:13,style:{height:"100%",width:"100%"},className:"z-0",children:[e.jsx(Ne,{attribution:'© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"}),e.jsx(Ae,{center:U,selectedPosition:l}),e.jsx(Ce,{onLocationSelect:ae}),l&&e.jsx(Se,{position:l})]})}),e.jsxs("div",{className:"flex items-center justify-between text-sm text-muted-foreground",children:[e.jsx("span",{children:"Haz clic en el mapa para seleccionar la ubicación exacta del activo."}),l&&e.jsxs("span",{className:"px-2 py-1 bg-green-100 text-green-800 rounded-md text-xs",children:["✓ Mapa sincronizado (",l[0].toFixed(6),", ",l[1].toFixed(6),")"]})]})]}),e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsx(d,{control:o.control,name:"latitude",render:({field:a})=>{var n;return e.jsxs(u,{children:[e.jsx(r,{children:"Latitud"}),e.jsx(m,{children:e.jsx(A,{placeholder:"Ej: 20.659698",...a,value:((n=a.value)==null?void 0:n.toString())||"",onChange:t=>{const x=t.target.value.trim().replace(/,+$/,"");a.onChange(x);const y=parseFloat(x),b=parseFloat(o.getValues("longitude").toString().trim().replace(/^[\s,]+/,""));!isNaN(y)&&!isNaN(b)&&(h([y,b]),v([y,b]))}})}),e.jsx(M,{children:"Edita manualmente o selecciona en el mapa"}),e.jsx(g,{})]})}}),e.jsx(d,{control:o.control,name:"longitude",render:({field:a})=>{var n;return e.jsxs(u,{children:[e.jsx(r,{children:"Longitud"}),e.jsx(m,{children:e.jsx(A,{placeholder:"Ej: -103.349609",...a,value:((n=a.value)==null?void 0:n.toString())||"",onChange:t=>{const x=t.target.value.trim().replace(/^[\s,]+/,"");a.onChange(x);const y=parseFloat(x),b=parseFloat(o.getValues("latitude").toString().trim().replace(/,+$/,""));!isNaN(b)&&!isNaN(y)&&(h([b,y]),v([b,y]))}})}),e.jsx(M,{children:"Edita manualmente o selecciona en el mapa"}),e.jsx(g,{})]})}})]})]})]}),e.jsxs("div",{className:"flex justify-end gap-4",children:[e.jsx(S,{variant:"outline",onClick:()=>C(`/admin/assets/${i}`),type:"button",children:"Cancelar"}),e.jsxs(S,{type:"button",disabled:D.isPending,onClick:()=>{console.log("=== BOTÓN GUARDAR CLICKEADO ==="),console.log("Errores de validación:",o.formState.errors),console.log("Estado del formulario válido:",o.formState.isValid),console.log("Valores actuales del formulario:",o.getValues()),P()},children:[D.isPending?"Guardando...":"Guardar Cambios",e.jsx(J,{className:"ml-2 h-4 w-4"})]}),e.jsxs(S,{type:"button",onClick:()=>{console.log("BOTÓN GUARDAR DIRECTO CLICKEADO"),P()},disabled:D.isPending,variant:"secondary",children:[D.isPending?"Guardando...":"Guardar Directo",e.jsx(J,{className:"ml-2 h-4 w-4"})]})]})]})})})]})]})})};export{qe as default};
