import { emailService } from "./emailService";

/**
 * Script de demostraci√≥n para probar el sistema de email
 */
export async function demonstrateEmailSystem() {
  console.log('üöÄ Iniciando demostraci√≥n del sistema de email...');

  // 1. Probar conexi√≥n
  console.log('\n1. Probando conexi√≥n...');
  const connectionTest = await emailService.testConnection();
  console.log(`   Estado: ${connectionTest.success ? '‚úÖ Conectado' : '‚ùå Error'}`);
  console.log(`   M√©todo: ${connectionTest.method}`);
  if (connectionTest.error) {
    console.log(`   Error: ${connectionTest.error}`);
    return;
  }

  // 2. Email de bienvenida
  console.log('\n2. Enviando email de bienvenida...');
  const welcomeResult = await emailService.sendWelcomeEmail(
    'test@example.com',
    'Usuario Prueba',
    'password123'
  );
  console.log(`   Resultado: ${welcomeResult ? '‚úÖ Enviado' : '‚ùå Error'}`);

  // 3. Notificaci√≥n de evento
  console.log('\n3. Enviando notificaci√≥n de evento...');
  const eventResult = await emailService.sendEventApprovalEmail(
    'test@example.com',
    'Concierto en el Parque',
    '15 de Julio 2025'
  );
  console.log(`   Resultado: ${eventResult ? '‚úÖ Enviado' : '‚ùå Error'}`);

  // 4. Notificaci√≥n de n√≥mina
  console.log('\n4. Enviando notificaci√≥n de n√≥mina...');
  const payrollResult = await emailService.sendPayrollNotification(
    'test@example.com',
    'Juan P√©rez',
    'Julio 2025',
    15000
  );
  console.log(`   Resultado: ${payrollResult ? '‚úÖ Enviado' : '‚ùå Error'}`);

  // 5. Recordatorio de mantenimiento
  console.log('\n5. Enviando recordatorio de mantenimiento...');
  const maintenanceResult = await emailService.sendMaintenanceReminder(
    'test@example.com',
    'Podadora Modelo X123',
    '20 de Julio 2025'
  );
  console.log(`   Resultado: ${maintenanceResult ? '‚úÖ Enviado' : '‚ùå Error'}`);

  console.log('\nüéâ Demostraci√≥n completada');
}