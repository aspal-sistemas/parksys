import { db } from "./db";
import * as schema from "../shared/schema";
import { eq } from "drizzle-orm";

const newConcessionTypes = [
  {
    name: "Teatro y Espect√°culos al Aire Libre",
    description: "Presentaciones teatrales, obras de t√≠teres, cuentacuentos y espect√°culos art√≠sticos en espacios naturales del parque.",
    technicalRequirements: "√Årea m√≠nima de 100m¬≤, acceso a electricidad, restricciones de horario (m√°ximo hasta 20:00 hrs), capacidad para 50 personas.",
    legalRequirements: "Permisos municipales de espect√°culos p√∫blicos, seguro de responsabilidad civil, equipos de sonido controlado.",
    operatingRules: "Horario m√°ximo hasta 20:00 hrs, volumen controlado, limpieza del √°rea posterior al evento.",
    impactLevel: "medio" as const,
    isActive: true
  },
  {
    name: "Deportes Acu√°ticos y Kayak",
    description: "Renta de kayaks, paddleboards, botes a pedales y clases de deportes acu√°ticos en lagos y lagunas del parque.",
    technicalRequirements: "Acceso directo a cuerpo de agua, bodega para equipo, √°rea de vestidores, zona de seguridad demarcada.",
    legalRequirements: "Certificaci√≥n en deportes acu√°ticos, personal con entrenamiento en primeros auxilios, chalecos salvavidas certificados.",
    operatingRules: "Supervisi√≥n permanente, uso obligatorio de chalecos salvavidas, horarios seg√∫n condiciones clim√°ticas.",
    impactLevel: "alto" as const,
    isActive: true
  },
  {
    name: "Organizaci√≥n de Eventos Familiares",
    description: "Planificaci√≥n y coordinaci√≥n de fiestas infantiles, reuniones familiares, baby showers y celebraciones sociales.",
    technicalRequirements: "Espacios techados disponibles, acceso a sanitarios, √°rea de juegos cercana, capacidad variable seg√∫n evento.",
    legalRequirements: "Seguro de eventos, personal capacitado en organizaci√≥n, proveedores autorizados de decoraci√≥n.",
    operatingRules: "Reservaci√≥n previa, l√≠mites de capacidad, limpieza posterior obligatoria, horarios establecidos.",
    impactLevel: "medio" as const,
    isActive: true
  },
  {
    name: "Food Truck Cocina Internacional",
    description: "Venta de comida internacional gourmet desde food truck m√≥vil: tacos coreanos, hamburguesas artesanales, sushi rolls.",
    technicalRequirements: "Zona de estacionamiento para food truck, acceso a agua potable, contenedores de basura especializados.",
    legalRequirements: "Licencia sanitaria municipal, certificaci√≥n de manejo de alimentos, food truck con todas las normas.",
    operatingRules: "Ubicaci√≥n fija asignada, manejo adecuado de residuos, cumplimiento de normas sanitarias.",
    impactLevel: "bajo" as const,
    isActive: true
  },
  {
    name: "Taller de Arte y Pintura Ecol√≥gica",
    description: "Clases de pintura al aire libre, talleres de arte con materiales ecol√≥gicos y exposiciones de arte local.",
    technicalRequirements: "√Årea techada para materiales, mesas y sillas port√°tiles, acceso a agua para limpieza, buena iluminaci√≥n natural.",
    legalRequirements: "Instructor certificado en artes pl√°sticas, materiales no t√≥xicos, seguro de actividades educativas.",
    operatingRules: "Grupos m√°ximo 15 personas, materiales ecol√≥gicos obligatorios, limpieza de √°rea posterior.",
    impactLevel: "bajo" as const,
    isActive: true
  },
  {
    name: "Entrenamiento Funcional y Yoga",
    description: "Clases grupales de fitness al aire libre, yoga matutino, entrenamiento funcional y meditaci√≥n en la naturaleza.",
    technicalRequirements: "Superficie plana de c√©sped o pavimento, sombra natural o artificial, espacio m√≠nimo 200m¬≤.",
    legalRequirements: "Instructores certificados, seguro de actividades deportivas, equipo de entrenamiento sanitizado.",
    operatingRules: "Horarios matutinos preferentes, grupos m√°ximo 20 personas, equipo personal de participantes.",
    impactLevel: "bajo" as const,
    isActive: true
  },
  {
    name: "Sesiones Fotogr√°ficas Profesionales",
    description: "Servicios de fotograf√≠a profesional para bodas, quincea√±eros, graduaciones y sesiones familiares en entornos naturales.",
    technicalRequirements: "Acceso a m√∫ltiples locaciones fotog√©nicas, permisos para uso de √°reas especiales, horarios flexibles.",
    legalRequirements: "Fot√≥grafo profesional registrado, equipo profesional completo, seguro de equipos y responsabilidad.",
    operatingRules: "Reservaci√≥n previa obligatoria, respeto a otros visitantes, no modificaci√≥n de paisaje natural.",
    impactLevel: "bajo" as const,
    isActive: true
  },
  {
    name: "Bar de Jugos y Smoothies Naturales",
    description: "Preparaci√≥n y venta de jugos frescos, smoothies verdes, aguas frescas naturales y bebidas energizantes saludables.",
    technicalRequirements: "Puesto fijo con refrigeraci√≥n, acceso a electricidad 220V, √°rea de preparaci√≥n higi√©nica, contenedores de residuos org√°nicos.",
    legalRequirements: "Licencia sanitaria, refrigeraci√≥n adecuada, frutas y verduras frescas certificadas, personal capacitado.",
    operatingRules: "Preparaci√≥n en tiempo real, ingredientes frescos diarios, compostaje de residuos org√°nicos.",
    impactLevel: "bajo" as const,
    isActive: true
  },
  {
    name: "Escuela de M√∫sica al Aire Libre",
    description: "Clases individuales y grupales de guitarra, ukelele, percusi√≥n y canto en espacios naturales del parque.",
    technicalRequirements: "√Årea ac√∫sticamente aislada, asientos fijos o port√°tiles, protecci√≥n contra clima, horarios controlados.",
    legalRequirements: "Instructores con formaci√≥n musical, instrumentos en buen estado, permisos de ruido controlado.",
    operatingRules: "Volumen controlado, horarios diurnos √∫nicamente, grupos m√°ximo 10 personas.",
    impactLevel: "medio" as const,
    isActive: true
  },
  {
    name: "Juegos Tradicionales Mexicanos",
    description: "Organizaci√≥n de torneos de loter√≠a, matarile-rile-r√≥n, stop, vibora de la mar y otros juegos tradicionales mexicanos.",
    technicalRequirements: "√Årea amplia para grupos grandes, superficie segura, acceso a sombra, capacidad m√≠nima 30 personas.",
    legalRequirements: "Coordinador con experiencia en recreaci√≥n, materiales de juego tradicionales, seguro de actividades grupales.",
    operatingRules: "Actividades familiares, preservaci√≥n de tradiciones mexicanas, inclusi√≥n de todas las edades.",
    impactLevel: "bajo" as const,
    isActive: true
  }
];

export async function seedConcessionTypes() {
  console.log("üè™ Iniciando creaci√≥n de tipos de concesiones adicionales en el cat√°logo...");
  
  try {
    for (const concessionType of newConcessionTypes) {
      // Verificar si el tipo de concesi√≥n ya existe
      const existingConcessionType = await db.query.concessionTypes.findFirst({
        where: eq(schema.concessionTypes.name, concessionType.name)
      });

      if (existingConcessionType) {
        console.log(`‚ö†Ô∏è Tipo de concesi√≥n "${concessionType.name}" ya existe, saltando...`);
        continue;
      }

      // Crear el tipo de concesi√≥n
      const [newConcessionType] = await db.insert(schema.concessionTypes).values({
        name: concessionType.name,
        description: concessionType.description,
        technicalRequirements: concessionType.technicalRequirements,
        legalRequirements: concessionType.legalRequirements,
        operatingRules: concessionType.operatingRules,
        impactLevel: concessionType.impactLevel,
        isActive: concessionType.isActive,
        createdAt: new Date(),
        updatedAt: new Date()
      }).returning();

      console.log(`‚úÖ Tipo de concesi√≥n creado: ${newConcessionType.name}`);
    }

    console.log("üéâ ¬°Tipos de concesiones adicionales creados exitosamente!");
    
    // Mostrar resumen
    const totalConcessionTypes = await db.query.concessionTypes.findMany({
      where: eq(schema.concessionTypes.isActive, true)
    });
    
    console.log(`üìä Total de tipos de concesiones activas en el cat√°logo: ${totalConcessionTypes.length}`);
    
    return true;
  } catch (error) {
    console.error("‚ùå Error al crear tipos de concesiones:", error);
    return false;
  }
}

// Ejecutar si es llamado directamente
if (import.meta.url === `file://${process.argv[1]}`) {
  seedConcessionTypes().then(() => {
    console.log("‚úÖ Proceso completado");
    process.exit(0);
  }).catch((error) => {
    console.error("‚ùå Error:", error);
    process.exit(1);
  });
}